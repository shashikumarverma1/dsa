Making Palindromes
MAKING PALINDROMES



Problem Statement



Amy has a string S consisting of N lowercase English letters. In one operation she can change any letter of the string to either its preceding letter or its succeeding(following) letter in alphabetical order. Assume the order to be cyclic, so preceding letter of ‘a’ is ‘z’ and succeeding letter of ‘z’ is ‘a’.

For Example, if S = “abca”, then she can change the letter ‘c’ to either ‘b’ or ‘d’, in one operation, so string either becomes “abba” or “abda”.

Find the minimum number of operations required to make string S, a palindrome. Palindrome is a string that reads backward or forward. For example, strings “aba”, “ooo” are palindrome.

You are given T independent test cases.



Constraints



1 <= T <= 10
1 <= N <= 105


Input Format



· First-line contains T.

· First line of each test case consists of a single integer N.

·

Second line of each test case consists of a string S.



Output Format



Print in a newline for each test case a single integer denoting the minimum number of operations required to make string S a palindrome.


Sample Input 1



2

3

aby

3

lol



Sample Output 1



2

0



Explanation of Sample 1



For 1st test case, she can change the first character to ‘z’ and also the last character to ‘z’, in one operation each. So, S = “zbz”

For 2nd test case, S is already a palindrome.



Things to Note for the Candidate: You can use your own IDE like Visual Studio Code, Eclipse, or any other IDE that you are comfortable with to build your solution code.

The IDE provided on the platform is purely for submission. Avoid using the IDE for coding out the solution.

Test against any custom input in your own IDE. In the IDE provided on the platform, you cannot pass custom test cases and see the output.

Use standard input and standard output in your program for the IDE to run the test cases smoothly against your code. We are giving a sample problem statement along with a solution that will pass the test cases in the IDE. - Sample Problem Statement (Right Click and Open in New Tab to view.)


Dominant Element

Problem Statement

 

Consider an array A consisting of N positive integers. The ith element of the array is called Dominant if :

Let B be an array formed by removing Ai from array A. Like if A = [5 1 2 3 2] and i=3, B will be = [5 1 3 2].
Now Ai is dominant if it is possible to rearrange elements of array B such that Ai+j > Bj holds for all 1<=j<=length of array B.
Like if Ai = 2 and B = [3 1 2], Ai is dominant because if we rearrange elements of array B as [2 1 3], A1+1 > B1, A2+2 > B2 and A3+3 > B3 holds.
Given array A, print the number of Dominant elements in array A.

 

Input Format

 

First line contains a single integer denoting N.
Next line contains N space separated integers denoting the elements of array A.
 

Output Format

 

Print the number of Dominant elements in array A.
 

Constraints

 

1<=N<=10^5
1<=Ai<=N
 

Sample Input 1

 

5

5 1 4 3 2

 

Sample Output 1

 

2

 

Explanation of Sample 1

 

The 1st and 3rd elements of the array are Dominant.

For i=1, B = [1 4 3 2]. Here 5+1>1, 5+2>4, 5+3>3 and 5+4>2 holds.

For i=3, B = [5 1 3 2]. Rearrange array B as [2 3 1 5]. Here 4+1>2, 4+1>3, 4+3>1, 4+4>5 holds.

 

Things to Note for the Candidate: You can use your own IDE like Visual Studio Code, Eclipse, or any other IDE that you are comfortable with to build your solution code.

The IDE provided on the platform is purely for submission. Avoid using the IDE for coding out the solution.

Test against any custom input in your own IDE. In the IDE provided on the platform, you cannot pass custom test cases and see the output.

Use standard input and standard output in your program for the IDE to run the test cases smoothly against your code. We are giving a sample problem statement along with a solution that will pass the test cases in the IDE. - Sample Problem Statement (Right Click and Open in New Tab to view.)